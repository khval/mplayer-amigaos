MPlayer/MEncoder notes for AmigaOS 4
------------------------------------

Index:

- Required libs in SDK for compiling
- Required fixes in the libs
- How to compile
- Compilation errors fixes
- Linking errors fixes
- Program bugs fix
- Additional compiler switches for specific CPUs
- Obsolete fixes




Required libs in SDK for compiling
----------------------------------

libfaac
libfaad
libfreetype
giflib
libjpeg
liblzo
libnut
libtheora
libmp3lame
libmpg123
libspeex
libxvidcore (=xvid4)
libmng
libopenjpeg
libvpx
libopencore-amr
librtmp
libgsm

Missing libs to be ported:
libcaca
libcddb (update)
libx264 (update, check if old bug with false colors during replay still present)
liba52
libass
libbluray
LIBBS2B
libdca
libdv
libnemesi
libsmbclient
live555
musepack (update)
libnas
toolame
twolame
libvstream (?)
libdirac (?)
libxavs




Required fixes in the libs
--------------------------

Libfaac:

In file included from /T/mplayer-configure-15503-1725184080/tmp.c:2:
/SDK/Local/common/include/faac.h:53: error: redefinition of typedef 'int32_t'
/SDK/newlib/include/stdint.h:83: error: previous declaration of 'int32_t' was here

change to

#ifndef HAVE_INT32_T
//typedef signed int int32_t;
#endif




How to compile
--------------

change in configure

if test "$_glob" = yes ; then
  _def_glob='#define HAVE_GLOB 1'
  _need_glob=no
else
  _def_glob='#undef HAVE_GLOB'
  _need_glob=yes
fi

to

  _def_glob='#undef HAVE_GLOB'
  _need_glob=no


for Libmng:

if test "$_mng" = auto ; then
  _mng=no
  return_statement_check libmng.h 'const char * p_ver = mng_version_text()' '!p_ver || p_ver[0] == 0' -lmng -lz $_ld_lm && _mng=yes
fi
echores "$_mng"
if test "$_mng" = yes ; then
  def_mng='#define CONFIG_MNG 1'
  extra_ldflags="$extra_ldflags -lmng -lz"
else
  def_mng='#undef CONFIG_MNG'
fi

to (add -ljpeg -llcms)

if test "$_mng" = auto ; then
  _mng=no
  return_statement_check libmng.h 'const char * p_ver = mng_version_text()' '!p_ver || p_ver[0] == 0' -lmng -ljpeg -llcms -lz $_ld_lm && _mng=yes
fi
echores "$_mng"
if test "$_mng" = yes ; then
  def_mng='#define CONFIG_MNG 1'
  extra_ldflags="$extra_ldflags -lmng -ljpeg -llcms -lz"
else
  def_mng='#undef CONFIG_MNG'
fi


save as configure_os4, then

protect configure_os4 +rwed

Download and uncompress ffmpeg to root, rename drawer to "ffmpeg"


Configure (native, generic):

./configure_os4 --enable-big-endian --enable-static --bindir=/SDK/Local/C --prefix=/SDK/Local --libdir=/SDK/Local/newlib/lib --extra-libs="-mcrt=newlib" --extra-cflags="-mcrt=newlib -mstrict-align -I/SDK/Include/include_h/ -I/SDK/newlib/include/ -I/SDK/Local/newlib/include/ -I/SDK/Local/common/include/" --extra-ldflags="-mcrt=newlib"

Configure (native, Altivec):

./configure_os4 --enable-big-endian --enable-static --bindir=/SDK/Local/C --prefix=/SDK/Local --libdir=/SDK/Local/newlib/lib --extra-libs="-mcrt=newlib" --extra-cflags="-mcrt=newlib -maltivec -I/SDK/Include/include_h/ -I/SDK/newlib/include/ -I/SDK/Local/newlib/include/ -I/SDK/Local/common/include/" --extra-ldflags="-mcrt=newlib"

Configure (crosscompile, generic):

./configure_os4 --target=ppc-amigaos --enable-cross-compile --cc=ppc-amigaos-gcc --host-cc=ppc-amigaos-gcc --as=ppc-amigaos-as --nm=ppc-amigaos-nm --ar=ppc-amigaos-ar --ranlib=ppc-amigaos-ranlib --enable-big-endian --enable-static --bindir=/SDK/Local/C --prefix=/SDK/Local --libdir=/SDK/Local/newlib/lib --extra-libs="-mcrt=newlib" --extra-cflags="-mcrt=newlib  -mstrict-align -I/SDK/Include/include_h/ -I/SDK/newlib/include/ -I/SDK/Local/common/include/" --extra-ldflags="-mcrt=newlib"

Configure (crosscompile, Altivec):

./configure_os4 --target=ppc-amigaos --enable-cross-compile --cc=ppc-amigaos-gcc --host-cc=ppc-amigaos-gcc --as=ppc-amigaos-as --nm=ppc-amigaos-nm --ar=ppc-amigaos-ar --ranlib=ppc-amigaos-ranlib --enable-big-endian --enable-static --bindir=/SDK/Local/C --prefix=/SDK/Local --libdir=/SDK/Local/newlib/lib --extra-libs="-mcrt=newlib" --extra-cflags="-mcrt=newlib -maltivec  -I/SDK/Include/include_h/ -I/SDK/newlib/include/ -I/SDK/Local/common/include/" --extra-ldflags="-mcrt=newlib"


Makefile:

remove (tremor is a vorbis implementation, but libvorbis is better)

SRCS_COMMON-$(TREMOR_INTERNAL)       += tremor/bitwise.c \
                                        tremor/block.c \
                                        tremor/codebook.c \
                                        tremor/floor0.c \
                                        tremor/floor1.c \
                                        tremor/framing.c \
                                        tremor/info.c \
                                        tremor/mapping0.c \
                                        tremor/mdct.c \
                                        tremor/registry.c \
                                        tremor/res012.c \
                                        tremor/sharedbook.c \
                                        tremor/synthesis.c \
                                        tremor/window.c \



config.mak: change

EXTRALIBS          = -Wl,-z,noexecstack -lm -mcrt=newlib -ffast-math  -lpng -lz -lmng -lz -ljpeg -lgif -L/SDK/local/newlib/lib -lfreetype -lz -lz -lbz2 -llzo2 -lmad -lspeex -ltheoradec -logg -lmpg123 -lfaad -lopencore-amrnb -lopencore-amrwb -lxvidcore -lpthread -lvpx -lnut -lpthread   -static -mcrt

to (added -llcms, -lopenjpeg, -lvorbis, -lvorbisenc, -lopencore-amrnb, -lopencore-amrwb, -ltheoraenc, -ltheora, removed -mcrt)

EXTRALIBS          = -Wl,-z,noexecstack -lm -mcrt=newlib -ffast-math  -lpng -lz -lmng -lz -ljpeg -lgif -llcms -L/SDK/local/newlib/lib -lfreetype -lz -lz -lbz2 -llzo2 -lmad -lspeex -ltheoradec -ltheoraenc -ltheora -lvorbis -lvorbisenc -logg -lmpg123 -lfaad -lopencore-amrnb -lopencore-amrwb -lxvidcore -lopenjpeg -lpthread -lvpx -lnut -lpthread -static

then change to

TREMOR_INTERNAL = no

change to

ARCH = ppc
(... = no)
ARCH_PPC = yes
(... = no)
HAVE_FAST_CLZ = yes
(... = no)

(If Altivec, change also to
HAVE_ALTIVEC = yes
)

in config.h:

change to

/* CPU stuff */
#define __CPU__ ppc
(... 0)
#define WORDS_BIGENDIAN 1
#define HAVE_BIGENDIAN 1
(... 0)
#define ARCH_PPC 1
(... 0)
#define HAVE_FAST_CLZ 1
(... 0)

(If Altivec, change also to
#define HAVE_ALTIVEC 1
#define HAVE_ALTIVEC_H 1
)


and set to

#define CONFIG_AVISYNTH_DEMUXER 0

#define CONFIG_H263_VAAPI_HWACCEL 0
#define CONFIG_H264_DXVA2_HWACCEL 0
#define CONFIG_H264_VAAPI_HWACCEL 0
#define CONFIG_MPEG2_DXVA2_HWACCEL 0
#define CONFIG_MPEG2_VAAPI_HWACCEL 0
#define CONFIG_MPEG4_VAAPI_HWACCEL 0
#define CONFIG_VC1_DXVA2_HWACCEL 0
#define CONFIG_VC1_VAAPI_HWACCEL 0
#define CONFIG_WMV3_DXVA2_HWACCEL 0
#define CONFIG_WMV3_VAAPI_HWACCEL 0

#define CONFIG_LIBDIRAC_ENCODER 0
#define CONFIG_LIBDIRAC_DECODER 0
#define CONFIG_DIRAC_PARSER 0
#define CONFIG_DIRAC_DEMUXER 0
#define CONFIG_DIRAC_MUXER 0

#define CONFIG_LIBSCHROEDINGER_DECODER 0
#define CONFIG_LIBSCHROEDINGER_ENCODER 0

#define CONFIG_GSM_DECODER 0
#define CONFIG_GSM_MS_DECODER 0
#define CONFIG_GSM_DEMUXER 0


#define CONFIG_LIBGSM_DECODER 0
#define CONFIG_LIBGSM_MS_DECODER 0
#define CONFIG_LIBGSM_ENCODER 0
#define CONFIG_LIBGSM_MS_ENCODER 0

#define CONFIG_LIBXAVS_ENCODER 0

#define CONFIG_MPEG4_VDPAU_DECODER 0
#define CONFIG_H264_VDPAU_DECODER 0
#define CONFIG_MPEG_VDPAU_DECODER 0
#define CONFIG_MPEG1_VDPAU_DECODER 0
#define CONFIG_VC1_VDPAU_DECODER 0
#define CONFIG_WMV3_VDPAU_DECODER 0

#define CONFIG_MPEG_XVMC_DECODER 0

#define CONFIG_TREMOR 0

#define CONFIG_LIBX264_ENCODER 0
(x264 encoding is currently broken)

#define CONFIG_LIBAACPLUS_ENCODER 0
#define CONFIG_LIBCELT_DECODER 0
#define CONFIG_LIBSTAGEFRIGHT_H264_DECODER 0
#define CONFIG_UTVIDEO_DECODER 0
#define CONFIG_LIBUTVIDEO_DECODER 0
#define CONFIG_LIBUTVIDEO_ENCODER 0

#define CONFIG_BLURAY_PROTOCOL 0

#define CONFIG_NETWORK 1

#define CONFIG_TLS_PROTOCOL 0
(we will be able to set this to 1 once OS4's OpenSSL will implement SSL_set_tlsext_host_name() . When this
will happen, set also #define CONFIG_OPENSSL 1)

#define CONFIG_LIBVO_AACENC_ENCODER 0
#define CONFIG_LIBVO_AMRWBENC_ENCODER 0

#define CONFIG_H264_VDA_HWACCEL 0
#define CONFIG_H264_CRYSTALHD_DECODER 0
#define CONFIG_MPEG4_CRYSTALHD_DECODER 0
#define CONFIG_MPEG2_CRYSTALHD_DECODER 0
#define CONFIG_MSMPEG4_CRYSTALHD_DECODER 0
#define CONFIG_VC1_CRYSTALHD_DECODER 0
#define CONFIG_WMV3_CRYSTALHD_DECODER 0


change to

#define MPLAYER_DATADIR "PROGDIR:"
#define MPLAYER_CONFDIR "PROGDIR:"
#define MPLAYER_LIBDIR "PROGDIR:"




Compilation errors fixes
------------------------

1)
gmake[1]: Entering directory `/VartiHD10/coding/mplayer-export-2010-11-01/ffmpeg/libavcodec'
AS      ppc/fft_altivec_s.o
ppc/fft_altivec_s.S: Assembler messages:
ppc/fft_altivec_s.S:447: Error: Unrecognized opcode: `lvx'
ppc/fft_altivec_s.S:447: Error: Unrecognized opcode: `lvx'
(...)

ffmpeg/libavcodec/ppc/Makefile

remove

FFT-OBJS-$(HAVE_GNU_AS)                += ppc/fft_altivec_s.o           \



2)
osdep/getch2.c: In function 'get_screen_size':
osdep/getch2.c:151: error: storage size of 'ws' isn't known
osdep/getch2.c:152: warning: implicit declaration of function 'ioctl'
osdep/getch2.c:152: error: 'TIOCGWINSZ' undeclared (first use in this function)
osdep/getch2.c:152: error: (Each undeclared identifier is reported only once
osdep/getch2.c:152: error: for each function it appears in.)
osdep/getch2.c:151: warning: unused variable 'ws'

modify to

#if !defined(__OS2__) && !defined(__MORPHOS__) && !defined(__amigaos4__)
#define CONFIG_IOCTL
#endif


3)
libmpeg2/cpu_state.c
/T/cc4Y3rPl.s: Assembler messages:
/T/cc4Y3rPl.s:7: Error: Unrecognized opcode: `stvx'
/T/cc4Y3rPl.s:9: Error: Unrecognized opcode: `stvx'
(...)

change (2x)

#if ARCH_PPC

to

#if (ARCH_PPC) && (HAVE_ALTIVEC)


4)
CC	rtpdec_asf.o
In file included from rtpdec_asf.c:33:
rtsp.h:100: error: 'INET_ADDRSTRLEN' undeclared here (not in a function)

modify in ffmpeg/libavformat/network.h

#ifndef INET6_ADDRSTRLEN
#define INET6_ADDRSTRLEN INET_ADDRSTRLEN
#endif

to

#ifndef INET6_ADDRSTRLEN
#ifdef __amigaos4__
#define INET6_ADDRSTRLEN 46
#else
#define INET6_ADDRSTRLEN INET_ADDRSTRLEN
#endif
#endif


5)
CC      libopenjpeg.o
(...)
libopenjpeg.c:31:22: error: openjpeg.h: No such file or directory

modify in ffmpeg/libavcodec/libopenjpeg.c to

#ifdef __amigaos4__
#include <openjpeg/openjpeg.h>
#else
#include <openjpeg.h>
#endif


6)
In file included from libavcodec/libfaac.c:31:
/SDK/Local/common/include/faac.h:84: error: expected declaration specifiers or '...' before 'int32_t'


in libavcodec/libfaac.c change to

#ifdef __amigaos4__
#include <stdint.h>
#endif

#include <faac.h>

#include "avcodec.h"
#include "audio_frame_queue.h"
#include "internal.h"


7)
gcc -I. -I./  -DHAVE_AV_CONFIG_H -Wundef -Wall -Wno-switch -Wno-parentheses -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -W
issing-prototypes -Wdisabled-optimization -Wno-pointer-sign -Wdeclaration-after-statement -std=gnu99 -Werror-implicit-function-declaration -O4    -ffast-math -fomit-frame-pointer
-fno-tree-vectorize -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -DNEWLIB -D__USE_INLINE__ -I. -Iffmpeg -mcrt=newlib -I/SDK/Include/include_h/ -I/SDK/newlib/i
clude/ -I/SDK/Local/newlib/include/ -I/SDK/Local/common/include/   -I/SDK/local/common/include/freetype2 -I/SDK/local/common/include  -MD -MP -c -o libavcodec/utils.o libavcodec/
tils.c
(...)
In file included from libavcodec/utils.c:1690:
./libavcodec/codec_names.h: In function 'avcodec_get_name':
./libavcodec/codec_names.h:1: error: 'codec_id_none' undeclared (first use in this function)

codec_names.sh generates lowercase defines, they have to be all turned uppercase! e.g.

case codec_id_none:

must be

case CODEC_ID_NONE:

to do: find a way to make the variable uppercase in the script, so far ^^ , toupper and tr don't work - make simple tests separately, learn better how bash works


8)
libavcodec/libopenjpegdec.c:33:22: error: openjpeg.h: No such file or directory

in libavcodec/libopenjpegdec.c and libavcodec/libopenjpegenc.c:
change to
#ifdef __amigaos4__
#include <openjpeg/openjpeg.h>
#else
#include <openjpeg.h>
#endif


9)
ppc-amigaos-gcc -MD -MP -Wstrict-prototypes -Wmissing-prototypes -Wundef -Wdisabled-optimization -Wno-pointer-sign -Wdeclaration-after-statement -std=gnu99 -Wall -Wno-switch -Wpointer-arith -Wredundant-decls -O4   -pipe -ffast-math -fomit-frame-pointer -Wstrict-prototypes -Wmissing-prototypes -Wundef -Wdisabled-optimization -Wno-pointer-sign -Wdeclaration-after-statement -std=gnu99 -Wall -Wno-switch -Wpointer-arith -Wredundant-decls -O4   -pipe -ffast-math -fomit-frame-pointer -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DNEWLIB -D__USE_INLINE__ -I. -mcrt=newlib  -I/SDK/Include/include_h/ -I/SDK/newlib/include/ -I/SDK/Local/newlib/include/ -I/SDK/Local/common/include/   -c -o cpudetect.o cpudetect.c
cpudetect.c: In function 'GetCpuCaps':
cpudetect.c:486: error: 'ULONG' undeclared (first use in this function)
cpudetect.c:486: error: (Each undeclared identifier is reported only once
cpudetect.c:486: error: for each function it appears in.)
cpudetect.c:486: error: expected ';' before 'result'
cpudetect.c:488: warning: implicit declaration of function 'GetCPUInfoTags'
cpudetect.c:488: error: 'GCIT_VectorUnit' undeclared (first use in this function)
cpudetect.c:488: error: 'result' undeclared (first use in this function)
cpudetect.c:488: error: 'TAG_DONE' undeclared (first use in this function)
cpudetect.c:489: error: 'VECTORTYPE_ALTIVEC' undeclared (first use in this function)

remove

#elif defined(__AMIGAOS4__)
#include <proto/exec.h>

change 

#ifdef __APPLE__
#include <sys/sysctl.h>
#elif defined(__AMIGAOS4__)
/* nothing */
#else
#include <signal.h>
#include <setjmp.h>

to

#ifdef __APPLE__
#include <sys/sysctl.h>
#elif defined(__AMIGAOS4__)
#include <proto/exec.h>
#else
#include <signal.h>
#include <setjmp.h>


10)
make[1]: Entering directory `/home/varthall/coding/mplayer-export-2010-10-04_altivec/ffmpeg/libavutil'
CC	ppc/cpu.o
(...)
ppc/cpu.c: In function 'ff_get_cpu_flags_ppc':
ppc/cpu.c:44: warning: redundant redeclaration of 'IExec'
/SDK/Include/include_h/proto/exec.h:41: note: previous declaration of 'IExec' was here
ppc/cpu.c:46: error: 'struct ExecIFace' has no member named 'IExec'

modify

#if HAVE_ALTIVEC
#ifdef __AMIGAOS4__
    ULONG result = 0;
    extern struct ExecIFace *IExec;

    IExec->GetCPUInfoTags(GCIT_VectorUnit, &result, TAG_DONE);
    if (result == VECTORTYPE_ALTIVEC)
        return AV_CPU_FLAG_ALTIVEC;


to


#if HAVE_ALTIVEC
#ifdef __AMIGAOS4__
    ULONG result = 0;

    GetCPUInfoTags(GCIT_VectorUnit, &result, TAG_DONE);
    if (result == VECTORTYPE_ALTIVEC)
        return AV_CPU_FLAG_ALTIVEC;


11)
ffmpeg/libavcodec/libavcodec.a(fft_altivec.o): In function `ff_fft_init_altivec':
fft_altivec.c:(.text+0xa): undefined reference to `ff_fft_calc_interleave_altivec'
fft_altivec.c:(.text+0x12): undefined reference to `ff_fft_calc_interleave_altivec'
ffmpeg/libavcodec/libavcodec.a(fft_altivec.o): In function `ff_imdct_half_altivec':
fft_altivec.c:(.text+0x308): undefined reference to `ff_fft_calc_altivec'

in ffmpeg/libavcodec/ppc/Makefile

put back

FFT-OBJS-$(HAVE_GNU_AS)                += ppc/fft_altivec_s.o   


12)
ppc-amigaos-gcc -O -DCODECS2HTML -I. -o codec-cfg codec-cfg.c
(...)
./stream/network.h:35:23: error: arpa/inet.h: No such file or directory

or

/usr/local/amiga/ppc-amigaos/SDK/newlib/include/netdb.h:78:34: error: sys/netinclude_types.h: No such file or directory


run

gcc -O -DCODECS2HTML -I. -Iffmpeg/ -o codec-cfg codec-cfg.c

then make


13)
libmpcodecs/vf_filmdint.c: In function 'get_time':
libmpcodecs/vf_filmdint.c:932: error: 'struct timeval' has no member named 'tv_secs'
libmpcodecs/vf_filmdint.c:932: error: 'struct timeval' has no member named 'tv_micro'

add (hint: maybe better to put it in config.h)

#ifdef __amigaos4__
#define tv_secs  tv_sec
#define tv_micro tv_usec
#endif


14)
stream/librtsp/rtsp.c: In function 'write_stream':
stream/librtsp/rtsp.c:70: warning: implicit declaration of function 'send'
stream/librtsp/rtsp.c: In function 'read_stream':
stream/librtsp/rtsp.c:97: warning: implicit declaration of function 'recv'
stream/librtsp/rtsp.c:107: error: 'struct timeval' has no member named 'tv_secs'
stream/librtsp/rtsp.c:108: error: 'struct timeval' has no member named 'tv_micro'

add before all the includes
(hint: maybe better to put it in config.h)

#ifdef __amigaos4__
#define tv_secs  tv_sec
#define tv_micro tv_usec
#include </SDK/newlib/include/sys/socket.h>
#endif


15)
CC      mmst.o
mmst.c: In function 'mms_open':
mmst.c:553: error: 'EILSEQ' undeclared (first use in this function)

#ifdef __amigaos4__
#include <sys/errno.h>
#endif


16)
os_support.c: In function 'ff_inet_aton':
os_support.c:65: warning: implicit declaration of function 'inet_aton'
os_support.c: In function 'ff_getaddrinfo':
os_support.c:99: warning: implicit declaration of function 'gethostbyname'
os_support.c:99: warning: assignment makes pointer from integer without a cast
os_support.c:110: error: 'INADDR_LOOPBACK' undeclared (first use in this function)
os_support.c:110: error: (Each undeclared identifier is reported only once
os_support.c:110: error: for each function it appears in.)
os_support.c: In function 'ff_getnameinfo':
os_support.c:185: warning: implicit declaration of function 'gethostbyaddr'
os_support.c:186: warning: assignment makes pointer from integer without a cast
os_support.c:203: warning: implicit declaration of function 'getservbyport'
os_support.c:203: warning: assignment makes pointer from integer without a cast

#ifdef __amigaos4__
#include </SDK/newlib/include/sys/socket.h>
#undef _NETINET_IN_H
#include </SDK/newlib/include/netinet/in.h>
#endif



17)
CC	rtpproto.o
rtpproto.c: In function 'rtp_read':
rtpproto.c:242: error: 'struct timeval' has no member named 'tv_secs'
rtpproto.c:243: error: 'struct timeval' has no member named 'tv_micro'
rtpproto.c:249: warning: implicit declaration of function 'recvfrom'

add before all the includes

#ifdef __amigaos4__
#include </SDK/newlib/include/sys/socket.h>
#define tv_secs  tv_sec
#define tv_micro tv_usec
#endif



18)
libmpeg2/idct.o: In function `mpeg2_idct_init':
idct.c:(.text+0x102): undefined reference to `mpeg2_idct_copy_altivec'
idct.c:(.text+0x106): undefined reference to `mpeg2_idct_copy_altivec'
idct.c:(.text+0x112): undefined reference to `mpeg2_idct_add_altivec'
idct.c:(.text+0x116): undefined reference to `mpeg2_idct_add_altivec'
idct.c:(.text+0x120): undefined reference to `mpeg2_idct_altivec_init'
libmpeg2/motion_comp.o: In function `mpeg2_mc_init':
motion_comp.c:(.text+0x42): undefined reference to `mpeg2_mc_altivec'
motion_comp.c:(.text+0x4a): undefined reference to `mpeg2_mc_altivec'
mp3lib/sr1.o: In function `synth_1to1':
sr1.c:(.text+0x57a0): undefined reference to `dct64_altivec'
sr1.c:(.text+0x5bb8): undefined reference to `dct64_altivec'
libavcodec/libavcodec.a(fft.o): In function `ff_fft_init':
fft.c:(.text.unlikely+0x21c): undefined reference to `ff_fft_init_altivec'
libavcodec/libavcodec.a(h264dsp.o): In function `ff_h264dsp_init':
h264dsp.c:(.text+0x6908): undefined reference to `ff_h264dsp_init_ppc'
libavcodec/libavcodec.a(libxvidff.o): In function `xvid_encode_init':
libxvidff.c:(.text.unlikely+0x250): undefined reference to `has_altivec'
libavcodec/libavcodec.a(mpegaudiodec_float.o): In function `decode_init':
mpegaudiodec_float.c:(.text.unlikely+0x238): undefined reference to `ff_mpegaudiodec_init_altivec'
libavcodec/libavcodec.a(mpegvideo.o): In function `ff_dct_common_init':
mpegvideo.c:(.text.unlikely+0x8c): undefined reference to `MPV_common_init_altivec'
libavcodec/libavcodec.a(dsputil_ppc.o): In function `mm_support':
dsputil_ppc.c:(.text+0x98): undefined reference to `has_altivec'
libavcodec/libavcodec.a(dsputil_ppc.o): In function `dsputil_init_ppc':
dsputil_ppc.c:(.text+0xe0): undefined reference to `dsputil_h264_init_ppc'
dsputil_ppc.c:(.text+0xe4): undefined reference to `has_altivec'
dsputil_ppc.c:(.text+0x120): undefined reference to `dsputil_init_altivec'
dsputil_ppc.c:(.text+0x12c): undefined reference to `vc1dsp_init_altivec'
dsputil_ppc.c:(.text+0x138): undefined reference to `float_init_altivec'
dsputil_ppc.c:(.text+0x144): undefined reference to `int_init_altivec'
dsputil_ppc.c:(.text+0x14e): undefined reference to `gmc1_altivec'
dsputil_ppc.c:(.text+0x152): undefined reference to `gmc1_altivec'
dsputil_ppc.c:(.text+0x162): undefined reference to `fdct_altivec'
dsputil_ppc.c:(.text+0x166): undefined reference to `fdct_altivec'
dsputil_ppc.c:(.text+0x19a): undefined reference to `ff_vp3_idct_put_altivec'
dsputil_ppc.c:(.text+0x1a2): undefined reference to `ff_vp3_idct_put_altivec'
dsputil_ppc.c:(.text+0x1a6): undefined reference to `ff_vp3_idct_add_altivec'
dsputil_ppc.c:(.text+0x1ae): undefined reference to `ff_vp3_idct_add_altivec'
dsputil_ppc.c:(.text+0x1b2): undefined reference to `ff_vp3_idct_altivec'
dsputil_ppc.c:(.text+0x1ba): undefined reference to `ff_vp3_idct_altivec'
dsputil_ppc.c:(.text+0x1d6): undefined reference to `idct_put_altivec'
dsputil_ppc.c:(.text+0x1e2): undefined reference to `idct_put_altivec'
dsputil_ppc.c:(.text+0x1e6): undefined reference to `idct_add_altivec'
dsputil_ppc.c:(.text+0x1ee): undefined reference to `idct_add_altivec'
libavcodec/libavcodec.a(vp8dsp.o): In function `ff_vp8dsp_init':
vp8dsp.c:(.text.unlikely+0x2b0): undefined reference to `ff_vp8dsp_init_altivec'
libswscale/libswscale.a(swscale.o): In function `yuv2packedX_altivec':
swscale.c:(.text+0xd3dc): undefined reference to `ff_yuv2packedX_altivec'
libswscale/libswscale.a(utils.o): In function `sws_setColorspaceDetails':
utils.c:(.text+0x3258): undefined reference to `ff_yuv2rgb_init_tables_altivec'
libswscale/libswscale.a(yuv2rgb.o): In function `ff_yuv2rgb_get_func_ptr':
yuv2rgb.c:(.text+0xd38c): undefined reference to `ff_yuv2rgb_init_altivec'

change in Makefile

                                        $(SRCS_LIBMPEG2-INTERNAL-yes)

to
                                        libmpeg2/idct_altivec.c \
                                        libmpeg2/motion_comp_altivec.c


and

                                        $(SRCS_MP3LIB-yes)

to

                                        mp3lib/dct64_altivec.c


nano ffmpeg/libavcodec/ppc/Makefile

change

ALTIVEC-OBJS-$(CONFIG_H264DSP)         += ppc/h264_altivec.o

ALTIVEC-OBJS-$(CONFIG_VC1_DECODER)     += ppc/vc1dsp_altivec.o
ALTIVEC-OBJS-$(CONFIG_VP3_DECODER)     += ppc/vp3dsp_altivec.o
ALTIVEC-OBJS-$(CONFIG_VP5_DECODER)     += ppc/vp3dsp_altivec.o
ALTIVEC-OBJS-$(CONFIG_VP6_DECODER)     += ppc/vp3dsp_altivec.o
ALTIVEC-OBJS-$(CONFIG_VP8_DECODER)     += ppc/vp8dsp_altivec.o


ALTIVEC-OBJS-$(CONFIG_FFT)             += ppc/fft_altivec.o             \
                                          $(FFT-OBJS-yes)

OBJS-$(HAVE_ALTIVEC)                   += ppc/dsputil_altivec.o         \
                                          ppc/fdct_altivec.o            \
                                          ppc/float_altivec.o           \
                                          ppc/gmc_altivec.o             \
                                          ppc/idct_altivec.o            \
                                          ppc/int_altivec.o             \
                                          ppc/mpegvideo_altivec.o       \
                                          $(ALTIVEC-OBJS-yes)


to

OBJS                                   += ppc/fft_altivec.o             \
                                          ppc/h264_altivec.o            \
                                          ppc/vc1dsp_altivec.o          \
                                          ppc/vp3dsp_altivec.o          \
                                          ppc/vp8dsp_altivec.o          \
                                          ppc/dsputil_altivec.o         \
                                          ppc/fdct_altivec.o            \
                                          ppc/float_altivec.o           \
                                          ppc/gmc_altivec.o             \
                                          ppc/idct_altivec.o            \
                                          ppc/int_altivec.o             \
                                          ppc/mpegvideo_altivec.o       \
                                          $(ALTIVEC-OBJS-yes)           \
                                          $(FFT-OBJS-yes)


rm ffmpeg/libavcodec/libavcodec.a


nano ffmpeg/libswscale/Makefile

change

OBJS-$(HAVE_ALTIVEC)       +=  ppc/yuv2rgb_altivec.o

to

OBJS                       +=  ppc/yuv2rgb_altivec.o

rm ffmpeg/libswscale/libswscale.a




Linking errors fixes
--------------------

1)
ffmpeg/libavformat/libavformat.a(allformats.o): In function `av_register_all':
allformats.c:(.text+0x91e): undefined reference to `rtp_muxer'

change in ffmpeg/libavformat/Makefile

OBJS-$(CONFIG_RTP_MUXER)                 += rtp.o         \
                                            rtpenc_aac.o     \
                                            rtpenc_amr.o     \
                                            rtpenc_h263.o    \
                                            rtpenc_mpv.o     \
                                            rtpenc.o      \
                                            rtpenc_h264.o \
                                            rtpenc_vp8.o  \
                                            rtpenc_xiph.o \
                                            avc.o

to

OBJS                                     += rtp.o         \
                                            rtpenc_aac.o     \
                                            rtpenc_amr.o     \
                                            rtpenc_h263.o    \
                                            rtpenc_mpv.o     \
                                            rtpenc.o      \
                                            rtpenc_h264.o \
                                            rtpenc_vp8.o  \
                                            rtpenc_xiph.o \
                                            avc.o

then

OBJS-$(CONFIG_RTSP_MUXER)                += rtsp.o rtspenc.o httpauth.o \
                                            rtpenc_chain.o

to

OBJS                                     += rtsp.o rtspenc.o httpauth.o \
                                            rtpenc_chain.o

and

OBJS-$(CONFIG_LIBNUT_DEMUXER)            += libnut.o riff.o
OBJS-$(CONFIG_LIBNUT_MUXER)              += libnut.o riff.o

to

OBJS                                     += libnut.o riff.o


same thing for the following:

OBJS-$(CONFIG_RTSP_DEMUXER)
OBJS-$(CONFIG_SAP_DEMUXER)
OBJS-$(CONFIG_SAP_MUXER)
OBJS-$(CONFIG_GOPHER_PROTOCOL)
OBJS-$(CONFIG_MMSH_PROTOCOL) 
OBJS-$(CONFIG_MMST_PROTOCOL)
OBJS-$(CONFIG_RTMP_PROTOCOL)
OBJS-$(CONFIG_RTP_PROTOCOL)
OBJS-$(CONFIG_TCP_PROTOCOL)
OBJS-$(CONFIG_UDP_PROTOCOL)
OBJS-$(CONFIG_LIBRTMP)


remove the following:

OBJS-$(CONFIG_TLS_PROTOCOL)              += tls.o


2)
(continue from here - and all the occurences containing .o for crystal, check the next lines)

ffmpeg/libavcodec/libavcodec.a(allcodecs.o): In function `avcodec_register_all':
allcodecs.c:(.text+0x1e): undefined reference to `ff_h264_vda_hwaccel'
allcodecs.c:(.text+0x26): undefined reference to `ff_h264_vda_hwaccel'
allcodecs.c:(.text+0x3c2): undefined reference to `ff_h264_crystalhd_decoder'
allcodecs.c:(.text+0x3c6): undefined reference to `ff_h264_crystalhd_decoder'


remove the following lines in ffmpeg/libavcodec/Makefile:

OBJS-$(CONFIG_VDA)                     += vda.o
OBJS-$(CONFIG_H264_VDA_HWACCEL)        += vda_h264.o
SKIPHEADERS-$(CONFIG_VDA)              += vda_internal.h
OBJS-$(CONFIG_CRYSTALHD)               += crystalhd.o


remove -$(...):

OBJS                                      += libopenjpegdec.o
OBJS                                      += libopenjpegenc.o
OBJS                                      += libspeexdec.o
OBJS                                      += libspeexenc.o audio_frame_queue.o
OBJS-$(CONFIG_THEORA_DECODER)          += xiph.o
OBJS-$(CONFIG_LIBTHEORA_ENCODER)          += libtheoraenc.o
OBJS-$(CONFIG_LIBVORBIS_ENCODER)          += libvorbis.o audio_frame_queue.o \
                                             vorbis_data.o vorbis_parser.o

and in config.h to:

#define CONFIG_H264_VDA_HWACCEL 0
#define CONFIG_H264_CRYSTALHD_DECODER 0
#define CONFIG_MPEG4_CRYSTALHD_DECODER 0
#define CONFIG_MPEG2_CRYSTALHD_DECODER 0
#define CONFIG_MSMPEG4_CRYSTALHD_DECODER 0
#define CONFIG_VC1_CRYSTALHD_DECODER 0
#define CONFIG_WMV3_CRYSTALHD_DECODER 0


3)
unrar_exec.o: In function `launch_pipe':
unrar_exec.c:(.text+0xe4): undefined reference to `pipe'
unrar_exec.c:(.text+0xf8): undefined reference to `fork'
unrar_exec.c:(.text+0x2a4): undefined reference to `execl'
unrar_exec.c:(.text+0x2c8): undefined reference to `execl'


change in sub/unrar_exec.c:

static FILE* launch_pipe(pid_t *apid, const char *executable, int action,
                         const char *archive, const char *filename)
{
  if (!executable || access(executable, R_OK | X_OK)) return NULL;
  if (access(archive, R_OK)) return NULL;
  {
    int mypipe[2];
    pid_t pid;

#ifdef __amigaos4__
        mp_msg(MSGT_GLOBAL, MSGL_ERR, "UnRAR: No pipe support yet in AmigaOS 4 version, aborting.\n");
        return NULL;
#else

(...)

    return fdopen(mypipe[0], "r");
#endif // __amigaos4__
  }
}


4)
libavformat/rtspenc.c: In function 'rtsp_write_packet':
libavformat/rtspenc.c:183: error: variable 'p' has initializer but incomplete type
libavformat/rtspenc.c:183: warning: excess elements in struct initializer
libavformat/rtspenc.c:183: warning: (near initialization for 'p')
libavformat/rtspenc.c:183: error: 'POLLIN' undeclared (first use in this function)

in config.h:
change
#define CONFIG_NETWORK 0
to
#define CONFIG_NETWORK 1


5)
ffmpeg/libavformat/libavformat.a(rtsp.o): In function `sdp_read_header':
rtsp.c:(.text+0x788): undefined reference to `ff_sdp_parse'

in config.h:
change to
#define CONFIG_RTPDEC 1



6)
codec-cfg.o: In function `parse_codec_cfg':
codec-cfg.c:(.text+0x1386): undefined reference to `errno'
codec-cfg.c:(.text+0x138a): undefined reference to `errno'
codec-cfg.c:(.text+0x149e): undefined reference to `errno'
codec-cfg.c:(.text+0x14a2): undefined reference to `errno'
codec-cfg.c:(.text+0x1876): undefined reference to `errno'
codec-cfg.o:codec-cfg.c:(.text+0x187a): more undefined references to `errno' follow

gcc -O -DCODECS2HTML -I. -o codec-cfg codec-cfg.c

make

at this point there's this note - DON'T follow it, stuff inside netinclude/ should never be used... find another solution if required:

"temporarily rename netinclude's errno.h:
mv Include/netinclude/errno.h Include/netinclude/errno_.h"



Program bugs fix
----------------

1)
get_path("config") problem

modify path.c to


#ifdef __MINGW32__
	static char *config_dir = "/mplayer";
#elif defined (__amigaos4__)
	static char *config_dir = "conf";
#else
	static char *config_dir = "/.mplayer";
#endif



and



#ifdef __amigaos4__
	homedir = "PROGDIR:";
#else
	if ((homedir = getenv("MPLAYER_HOME")) != NULL)
		config_dir = "";
	else if ((homedir = getenv("HOME")) == NULL)
(...)
#else
	return NULL;
#endif
#endif // __amigaos4__

then create directory conf and copy from etc/ and from afx' MPlayer

codecs.conf                   96627 ----rw-d 05-Okt-10  02:01:14
config                          569 ----rwed 20-Avg-09  19:07:34
dvb-menu.conf                  2815 ----rw-d 20-Feb-10  22:02:49
example.conf                   3557 ----rw-d 15-Dec-09  03:13:51
font                            Dir ----rwed 09-Feb-09  15:56:06
input.conf                     4407 ----rw-d 18-Jun-10  18:27:24
menu.conf                      5821 ----rw-d 20-Feb-10  22:02:49
subfont.ttf                  139640 ----rwed 09-Feb-09  16:01:08


2)
New_Face failed. Maybe the font path is wrong.
Please supply the text font file (~/.mplayer/subfont.ttf).




Additional compiler switches for specific CPUs
----------------------------------------------

440/460:

Same as Generic except:

./configure_os4 --enable-big-endian --enable-static --bindir=/SDK/Local/C --prefix=/SDK/Local --libdir=/SDK/Local/newlib/lib --extra-libs=-mcrt=newlib --extra-cflags="-mcrt=newlib -mcpu=440fp -I/SDK/Include/include_h/ -I/SDK/newlib/include/ -I/SDK/Local/newlib/include/ -I/SDK/Local/common/include/" --extra-ldflags="-mcrt=newlib"

in config.h:

change to

/* CPU stuff */
#define __CPU__ ppc
(... 0)
#define WORDS_BIGENDIAN 1
#define HAVE_BIGENDIAN 1
(... 0)
#define ARCH_PPC 1
(... 0)
#define HAVE_PPC4xx 1
(... 0)


Other CPUs:
Note: remember to rename appropriate CPU-specific libs in SDK as well

Altivec + G4:

./configure_os4 --enable-big-endian --enable-static --bindir=/SDK/Local/C --prefix=/SDK/Local --libdir=/SDK/Local/newlib/lib --extra-libs=-mcrt=newlib --extra-cflags="-mcrt=newlib -mcpu=7450 -maltivec -I/SDK/Include/include_h/ -I/SDK/newlib/include/ -I/SDK/Local/newlib/include/ -I/SDK/Local/common/include/" --extra-ldflags="-mcrt=newlib"

440:

./configure_os4 --enable-big-endian --enable-static --bindir=/SDK/Local/C --prefix=/SDK/Local --libdir=/SDK/Local/newlib/lib --extra-libs=-mcrt=newlib --extra-cflags="-mcrt=newlib -mcpu=440fp -I/SDK/Include/include_h/ -I/SDK/newlib/include/ -I/SDK/Local/newlib/include/ -I/SDK/Local/common/include/" --extra-ldflags="-mcrt=newlib"

G3:

./configure_os4 --enable-big-endian --enable-static --bindir=/SDK/Local/C --prefix=/SDK/Local --libdir=/SDK/Local/newlib/lib --extra-libs=-mcrt=newlib --extra-cflags="-mcrt=newlib -mcpu=750 -I/SDK/Include/include_h/ -I/SDK/newlib/include/ -I/SDK/Local/newlib/include/ -I/SDK/Local/common/include/" --extra-ldflags="-mcrt=newlib"



Obsolete fixes
--------------

1)
config.mak: change to

NEED_SHMEM = no


2)
- makefile:

copy as makefile_os4 and change

codecs.conf.h: codec-cfg$(EXESUF) etc/codecs.conf
	./codec-cfg$(EXESUF) ./etc/codecs.conf > $@

to

codecs.conf.h: codec-cfg$(EXESUF) etc/codecs.conf
	./codec-cfg$(EXESUF) etc/codecs.conf > $@
	

3)
- config.h:  add

#ifdef __amigaos4__
#define        PRId32                  "d"
#define        PRIx32                  "x"
#define        PRIX32                  "X"
#define        PRId64                  "lld"
#define        PRIx64                  "llx"
#define        PRIX64                  "llX"
#define        PRIu64                  "llu"
#define        PRIdFAST16              "d"
#define        PRIdFAST32              "d"
#define LLONG_MAX        0x7fffffffffffffffLL
#define ULLONG_MAX       0xffffffffffffffffULL
#define LLONG_MIN        (-0x7fffffffffffffffLL-1)
#endif

(at least PRIu64 is already defined for newlib, but due to how it has been implemented the compile fails, the above are taken from clib2 and used instead).

(clib2)
#ifdef __amigaos4__
#define	SIGHUP	0
#define	SIGQUIT	0
#define	SIGPIPE	0
#endif


4)
- on errors like

h263.c: In function 'decode_vop_header':
h263.c:5860: error: syntax error before 'PRId64'

add

#ifdef __amigaos4__
#include <inttypes.h>
#endif


5)
m_option.c: change

#include <inttypes.h>

to

#ifdef __amigaos4__
#include <stdint.h>
#else
#include <inttypes.h>
#endif


6)
stream/stream.c

#ifndef __MINGW32__
#include <sys/ioctl.h>
#include <sys/wait.h>
#endif

to

#ifndef __MINGW32__
#include <sys/ioctl.h>
#ifndef __amigaos4__
#include <sys/wait.h>
#endif
#endif


7)
libswscale/swscale.c, swscale_template.c:

change

#ifdef (HAVE_ALTIVEC)

to

#if defined (HAVE_ALTIVEC) && !defined (__amigaos4__)



8)
libswscale/swscale.c:

change

#if (defined (HAVE_ALTIVEC) || defined (RUNTIME_CPUDETECT)) && defined (CONFIG_GPL)

to

#if (defined (HAVE_ALTIVEC) || defined (RUNTIME_CPUDETECT)) && defined (CONFIG_GPL) && !defined (__amigaos4__)


9)
libavcodec/dsputil.c:

change

    if (ENABLE_MMX)      dsputil_init_mmx   (c, avctx);
    if (ENABLE_ARMV4L)   dsputil_init_armv4l(c, avctx);
    if (ENABLE_MLIB)     dsputil_init_mlib  (c, avctx);
    if (ENABLE_VIS)      dsputil_init_vis   (c, avctx);
    if (ENABLE_ALPHA)    dsputil_init_alpha (c, avctx);
    if (ENABLE_POWERPC)  dsputil_init_ppc   (c, avctx);
    if (ENABLE_MMI)      dsputil_init_mmi   (c, avctx);
    if (ENABLE_SH4)      dsputil_init_sh4   (c, avctx);
    if (ENABLE_BFIN)     dsputil_init_bfin  (c, avctx);

to

#if defined (__amigaos4__)
dsputil_init_ppc   (c, avctx);
#else
    if (ENABLE_MMX)      dsputil_init_mmx   (c, avctx);
    if (ENABLE_ARMV4L)   dsputil_init_armv4l(c, avctx);
    if (ENABLE_MLIB)     dsputil_init_mlib  (c, avctx);
    if (ENABLE_VIS)      dsputil_init_vis   (c, avctx);
    if (ENABLE_ALPHA)    dsputil_init_alpha (c, avctx);
    if (ENABLE_POWERPC)  dsputil_init_ppc   (c, avctx);
    if (ENABLE_MMI)      dsputil_init_mmi   (c, avctx);tr
    if (ENABLE_SH4)      dsputil_init_sh4   (c, avctx);
    if (ENABLE_BFIN)     dsputil_init_bfin  (c, avctx);
#endif


10)
- libpostproc/postprocess.c:

change

#include "postprocess_altivec_template.c"

to

#ifndef __amigaos4__
#include "postprocess_altivec_template.c"
#endif


11)
- liba52/resample.c:

change

#ifdef HAVE_ALTIVEC
#include "resample_altivec.c"
#endif

to

#if defined (HAVE_ALTIVEC) && !defined (__amigaos4__)
#include "resample_altivec.c"
#endif


12)
- liba52/imdct.c:

change

#ifdef HAVE_ALTIVEC

#ifndef SYS_DARWIN
#include <altivec.h>
#endif

to

#ifdef HAVE_ALTIVEC

#if !defined (SYS_DARWIN) && !defined (__amigaos4__)
#include <altivec.h>
#endif


change

#ifdef HAVE_ALTIVEC
        if (mm_accel & MM_ACCEL_PPC_ALTIVEC)
	{
	  fprintf(stderr, "Using AltiVec optimized IMDCT transform\n");
          a52_imdct_512 = imdct_do_512_altivec;
	}
	else
#endif

to

#if defined (HAVE_ALTIVEC) && !defined (__amigaos4__)
        if (mm_accel & MM_ACCEL_PPC_ALTIVEC)
	{
	  fprintf(stderr, "Using AltiVec optimized IMDCT transform\n");
          a52_imdct_512 = imdct_do_512_altivec;
	}
	else
#endif


change

void
imdct_do_512_altivec(sample_t data[],sample_t delay[], sample_t bias)


to

#ifndef __amigaos4__
void
imdct_do_512_altivec(sample_t data[],sample_t delay[], sample_t bias)

and add closing #endif:

  for(i=0; i<64; i++) {
    *delay_ptr++  =  buf[i].imag       * *--window_ptr; 
    *delay_ptr++  = -buf[128-i-1].real * *--window_ptr; 
  }
}
#endif



to

  for(i=0; i<64; i++) {
    *delay_ptr++  =  buf[i].imag       * *--window_ptr; 
    *delay_ptr++  = -buf[128-i-1].real * *--window_ptr; 
  }
}
#endif
#endif


13)
- osdep/timer-lx.c:

change

#ifdef HAVE_NANOSLEEP
    struct timespec ts;
    ts.tv_sec  =  usec_delay / 1000000;
    ts.tv_nsec = (usec_delay % 1000000) * 1000;
    return nanosleep(&ts, NULL);
#else
    return usleep(usec_delay);
#endif

to

#ifdef HAVE_NANOSLEEP
    struct timespec ts;
    ts.tv_sec  =  usec_delay / 1000000;
    ts.tv_nsec = (usec_delay % 1000000) * 1000;
    return nanosleep(&ts, NULL);
#elif defined (__amigaos4__)
    usleep(usec_delay);
    return 0;
#else
    return usleep(usec_delay);
#endif



14)
- in linking:

libavformat/libavformat.a(allformats.o)(.text+0xfa): In function `av_register_all':
: undefined reference to `avisynth_demuxer'

change in libavformat/makefile

# muxers/demuxers
OBJS-$(CONFIG_AAC_DEMUXER)               += raw.o
OBJS-$(CONFIG_AC3_DEMUXER)               += raw.o
OBJS-$(CONFIG_AC3_MUXER)                 += raw.o
OBJS-$(CONFIG_ADTS_MUXER)                += adtsenc.o
OBJS-$(CONFIG_AIFF_DEMUXER)              += aiff.o riff.o raw.o
OBJS-$(CONFIG_AIFF_MUXER)                += aiff.o riff.o
OBJS-$(CONFIG_AMR_DEMUXER)               += amr.o
OBJS-$(CONFIG_AMR_MUXER)                 += amr.o
OBJS-$(CONFIG_APC_DEMUXER)               += apc.o
OBJS-$(CONFIG_APE_DEMUXER)               += ape.o
OBJS-$(CONFIG_ASF_DEMUXER)               += asf.o riff.o
OBJS-$(CONFIG_ASF_MUXER)                 += asf-enc.o riff.o
OBJS-$(CONFIG_ASF_STREAM_MUXER)          += asf-enc.o riff.o
OBJS-$(CONFIG_AU_DEMUXER)                += au.o raw.o
OBJS-$(CONFIG_AU_MUXER)                  += au.o
OBJS-$(CONFIG_AVI_DEMUXER)               += avidec.o riff.o
OBJS-$(CONFIG_AVI_MUXER)                 += avienc.o riff.o
OBJS-$(CONFIG_AVISYNTH)                  += avisynth.o
OBJS-$(CONFIG_AVS_DEMUXER)               += avs.o vocdec.o voc.o
OBJS-$(CONFIG_BETHSOFTVID_DEMUXER)       += bethsoftvid.o
OBJS-$(CONFIG_BKTR_DEMUXER)              += bktr.o
OBJS-$(CONFIG_C93_DEMUXER)               += c93.o vocdec.o voc.o
OBJS-$(CONFIG_CRC_MUXER)                 += crc.o
OBJS-$(CONFIG_DAUD_DEMUXER)              += daud.o
OBJS-$(CONFIG_DSICIN_DEMUXER)            += dsicin.o
OBJS-$(CONFIG_DTS_DEMUXER)               += raw.o
OBJS-$(CONFIG_DV_DEMUXER)                += dv.o
OBJS-$(CONFIG_DV_MUXER)                  += dvenc.o
OBJS-$(CONFIG_DV1394_DEMUXER)            += dv1394.o dv.o
OBJS-$(CONFIG_DXA_DEMUXER)               += dxa.o riff.o
OBJS-$(CONFIG_EA_DEMUXER)                += electronicarts.o
OBJS-$(CONFIG_FFM_DEMUXER)               += ffm.o
OBJS-$(CONFIG_FFM_MUXER)                 += ffm.o
OBJS-$(CONFIG_FLAC_DEMUXER)              += raw.o
OBJS-$(CONFIG_FLAC_MUXER)                += raw.o
OBJS-$(CONFIG_FLIC_DEMUXER)              += flic.o
OBJS-$(CONFIG_FLV_DEMUXER)               += flvdec.o
OBJS-$(CONFIG_FLV_MUXER)                 += flvenc.o
OBJS-$(CONFIG_FOURXM_DEMUXER)            += 4xm.o
OBJS-$(CONFIG_FRAMECRC_MUXER)            += crc.o
OBJS-$(CONFIG_GIF_MUXER)                 += gif.o
OBJS-$(CONFIG_GIF_DEMUXER)               += gifdec.o
OBJS-$(CONFIG_GXF_DEMUXER)               += gxf.o
OBJS-$(CONFIG_GXF_MUXER)                 += gxfenc.o
OBJS-$(CONFIG_H261_DEMUXER)              += raw.o
OBJS-$(CONFIG_H261_MUXER)                += raw.o
OBJS-$(CONFIG_H263_DEMUXER)              += raw.o
OBJS-$(CONFIG_H263_MUXER)                += raw.o
OBJS-$(CONFIG_H264_DEMUXER)              += raw.o
OBJS-$(CONFIG_H264_MUXER)                += raw.o
OBJS-$(CONFIG_IDCIN_DEMUXER)             += idcin.o
OBJS-$(CONFIG_IMAGE2_DEMUXER)            += img2.o
OBJS-$(CONFIG_IMAGE2_MUXER)              += img2.o
OBJS-$(CONFIG_IMAGE2PIPE_DEMUXER)        += img2.o
OBJS-$(CONFIG_IMAGE2PIPE_MUXER)          += img2.o
OBJS-$(CONFIG_INGENIENT_DEMUXER)         += raw.o
OBJS-$(CONFIG_IPMOVIE_DEMUXER)           += ipmovie.o
OBJS-$(CONFIG_M4V_DEMUXER)               += raw.o
OBJS-$(CONFIG_M4V_MUXER)                 += raw.o
OBJS-$(CONFIG_MATROSKA_AUDIO_MUXER)      += matroskaenc.o matroska.o riff.o
OBJS-$(CONFIG_MATROSKA_DEMUXER)          += matroskadec.o matroska.o riff.o
OBJS-$(CONFIG_MATROSKA_MUXER)            += matroskaenc.o matroska.o riff.o
OBJS-$(CONFIG_MJPEG_DEMUXER)             += raw.o
OBJS-$(CONFIG_MJPEG_MUXER)               += raw.o
OBJS-$(CONFIG_MM_DEMUXER)                += mm.o
OBJS-$(CONFIG_MMF_DEMUXER)               += mmf.o raw.o
OBJS-$(CONFIG_MMF_MUXER)                 += mmf.o riff.o
OBJS-$(CONFIG_MOV_DEMUXER)               += mov.o riff.o isom.o
OBJS-$(CONFIG_MOV_MUXER)                 += movenc.o riff.o isom.o
OBJS-$(CONFIG_MP2_MUXER)                 += mp3.o
OBJS-$(CONFIG_MP3_DEMUXER)               += mp3.o
OBJS-$(CONFIG_MP3_MUXER)                 += mp3.o
OBJS-$(CONFIG_MP4_MUXER)                 += movenc.o riff.o isom.o
OBJS-$(CONFIG_MPC_DEMUXER)               += mpc.o
OBJS-$(CONFIG_MPEG1SYSTEM_MUXER)         += mpegenc.o
OBJS-$(CONFIG_MPEG1VCD_MUXER)            += mpegenc.o
OBJS-$(CONFIG_MPEG2DVD_MUXER)            += mpegenc.o
OBJS-$(CONFIG_MPEG2VOB_MUXER)            += mpegenc.o
OBJS-$(CONFIG_MPEG2SVCD_MUXER)           += mpegenc.o
OBJS-$(CONFIG_MPEG1VIDEO_MUXER)          += raw.o
OBJS-$(CONFIG_MPEG2VIDEO_MUXER)          += raw.o
OBJS-$(CONFIG_MPEGPS_DEMUXER)            += mpeg.o
OBJS-$(CONFIG_MPEGTS_DEMUXER)            += mpegts.o
OBJS-$(CONFIG_MPEGTSRAW_DEMUXER)         += mpegts.o
OBJS-$(CONFIG_MPEGTS_MUXER)              += mpegtsenc.o
OBJS-$(CONFIG_MPEGVIDEO_DEMUXER)         += raw.o
OBJS-$(CONFIG_MPJPEG_MUXER)              += mpjpeg.o
OBJS-$(CONFIG_MTV_DEMUXER)               += mtv.o
OBJS-$(CONFIG_MXF_DEMUXER)               += mxf.o
OBJS-$(CONFIG_NSV_DEMUXER)               += nsvdec.o
OBJS-$(CONFIG_NULL_MUXER)                += raw.o
OBJS-$(CONFIG_NUT_DEMUXER)               += nutdec.o nut.o riff.o
OBJS-$(CONFIG_NUT_MUXER)                 += nutenc.o nut.o riff.o
OBJS-$(CONFIG_NUV_DEMUXER)               += nuv.o riff.o
OBJS-$(CONFIG_OGG_DEMUXER)               += ogg2.o           \
                                            oggparsevorbis.o \
                                            oggparsetheora.o \
                                            oggparseflac.o   \
                                            oggparseogm.o    \
                                            riff.o
OBJS-$(CONFIG_OGG_MUXER)                 += ogg.o
OBJS-$(CONFIG_OSS_DEMUXER)               += audio.o
OBJS-$(CONFIG_OSS_MUXER)                 += audio.o
OBJS-$(CONFIG_PSP_MUXER)                 += movenc.o riff.o isom.o
OBJS-$(CONFIG_RAWVIDEO_DEMUXER)          += raw.o
OBJS-$(CONFIG_RAWVIDEO_MUXER)            += raw.o
OBJS-$(CONFIG_REDIR_DEMUXER)             += rtsp.o
OBJS-$(CONFIG_RM_DEMUXER)                += rmdec.o
OBJS-$(CONFIG_RM_MUXER)                  += rmenc.o
OBJS-$(CONFIG_ROQ_DEMUXER)               += idroq.o
OBJS-$(CONFIG_ROQ_MUXER)                 += raw.o
OBJS-$(CONFIG_RTP_MUXER)                 += rtp.o rtp_h264.o rtp_mpv.o rtp_aac.o
OBJS-$(CONFIG_RTSP_DEMUXER)              += rtsp.o
OBJS-$(CONFIG_SDP_DEMUXER)               += rtsp.o
OBJS-$(CONFIG_SEGAFILM_DEMUXER)          += segafilm.o
OBJS-$(CONFIG_SHORTEN_DEMUXER)           += raw.o
OBJS-$(CONFIG_SMACKER_DEMUXER)           += smacker.o
OBJS-$(CONFIG_SOL_DEMUXER)               += sol.o raw.o
OBJS-$(CONFIG_STR_DEMUXER)               += psxstr.o
OBJS-$(CONFIG_SWF_DEMUXER)               += swf.o
OBJS-$(CONFIG_SWF_MUXER)                 += swf.o
OBJS-$(CONFIG_TG2_MUXER)                 += movenc.o riff.o isom.o
OBJS-$(CONFIG_TGP_MUXER)                 += movenc.o riff.o isom.o
OBJS-$(CONFIG_THP_DEMUXER)               += thp.o
OBJS-$(CONFIG_TIERTEXSEQ_DEMUXER)        += tiertexseq.o
OBJS-$(CONFIG_TTA_DEMUXER)               += tta.o
OBJS-$(CONFIG_TXD_DEMUXER)               += txd.o
OBJS-$(CONFIG_V4L2_DEMUXER)              += v4l2.o
OBJS-$(CONFIG_V4L_DEMUXER)               += v4l.o
OBJS-$(CONFIG_VC1_DEMUXER)               += raw.o
OBJS-$(CONFIG_VMD_DEMUXER)               += sierravmd.o
OBJS-$(CONFIG_VOC_DEMUXER)               += vocdec.o voc.o
OBJS-$(CONFIG_VOC_MUXER)                 += vocenc.o voc.o
OBJS-$(CONFIG_WAV_DEMUXER)               += wav.o riff.o raw.o
OBJS-$(CONFIG_WAV_MUXER)                 += wav.o riff.o
OBJS-$(CONFIG_WC3_DEMUXER)               += wc3movie.o
OBJS-$(CONFIG_WSAUD_DEMUXER)             += westwood.o
OBJS-$(CONFIG_WSVQA_DEMUXER)             += westwood.o
OBJS-$(CONFIG_WV_DEMUXER)                += wv.o
OBJS-$(CONFIG_X11_GRAB_DEVICE_DEMUXER)   += x11grab.o
OBJS-$(CONFIG_YUV4MPEGPIPE_MUXER)        += yuv4mpeg.o
OBJS-$(CONFIG_YUV4MPEGPIPE_DEMUXER)      += yuv4mpeg.o

# external libraries
OBJS-$(CONFIG_LIBDC1394_DEMUXER)         += libdc1394.o
OBJS-$(CONFIG_LIBNUT_DEMUXER)            += libnut.o riff.o
OBJS-$(CONFIG_LIBNUT_MUXER)              += libnut.o riff.o

to

# muxers/demuxers
OBJS += raw.o adtsenc.o aiff.o riff.o raw.o amr.o apc.o ape.o asf.o asf-enc.o au.o avidec.o avienc.o avs.o vocdec.o voc.o bethsoftvid.o c93.o crc.o daud.o dsicin.o dv.o dvenc.o dxa.o electronicarts.o ffm.o flic.o flvdec.o flvenc.o 4xm.o gif.o gifdec.o gxf.o gxfenc.o idcin.o img2.o ipmovie.o matroskaenc.o matroskadec.o matroska.o mm.o mmf.o mov.o isom.o movenc.o mp3.o mpc.o mpegenc.o mpeg.o mpegts.o mpegtsenc.o mpjpeg.o mtv.o mxf.o nsvdec.o nutdec.o nutenc.o nut.o nuv.o ogg2.o oggparsevorbis.o oggparsetheora.o oggparseflac.o oggparseogm.o ogg.o rmdec.o rmenc.o idroq.o segafilm.o smacker.o sol.o psxstr.o swf.o movenc.o thp.o tiertexseq.o tta.o txd.o sierravmd.o vocenc.o wav.o wc3movie.o westwood.o wv.o yuv4mpeg.o framehook.o file.o http.o file.o

saving a makefile_os4, and change in makefile_os4 in root dir

libavformat/libavformat.a:
	$(MAKE) -C libavformat -f Makefile_os4

libmpcodecs/libmpcodecs.a:
	$(MAKE) -C libmpcodecs -f Makefile_os4



- libaviformat/allformats.c:

change to

    REGISTER_DEMUXER  (AAC, aac);
    REGISTER_MUXDEMUX (AC3, ac3);
    REGISTER_MUXER    (ADTS, adts);
    REGISTER_MUXDEMUX (AIFF, aiff);
    REGISTER_MUXDEMUX (AMR, amr);
    REGISTER_DEMUXER  (APC, apc);
    REGISTER_DEMUXER  (APE, ape);
    REGISTER_MUXDEMUX (ASF, asf);
    REGISTER_MUXER    (ASF_STREAM, asf_stream);
    REGISTER_MUXDEMUX (AU, au);
    REGISTER_MUXDEMUX (AUDIO_BEOS, audio_beos);
    REGISTER_MUXDEMUX (AVI, avi);
#ifndef __amigaos4__
    REGISTER_DEMUXER  (AVISYNTH, avisynth);
    REGISTER_DEMUXER  (BKTR, bktr);
    REGISTER_DEMUXER  (DV1394, dv1394);
    REGISTER_MUXDEMUX (OSS, oss);
    REGISTER_DEMUXER  (V4L2, v4l2);
    REGISTER_DEMUXER  (V4L, v4l);
    REGISTER_DEMUXER  (X11_GRAB_DEVICE, x11_grab_device);
    REGISTER_DEMUXER  (LIBDC1394, libdc1394);
    REGISTER_PROTOCOL (TCP, tcp);
    REGISTER_PROTOCOL (UDP, udp);
    REGISTER_PROTOCOL (RTP, rtp);
    REGISTER_DEMUXER  (RTSP, rtsp);
    REGISTER_DEMUXER  (REDIR, redir);
    REGISTER_DEMUXER  (SDP, sdp);
    REGISTER_MUXER    (RTP, rtp);
    if (!ENABLE_NUT_DEMUXER) REGISTER_DEMUXER (LIBNUT, libnut);
    if (!ENABLE_NUT_MUXER)   REGISTER_MUXER   (LIBNUT, libnut);
#ifdef CONFIG_RTP_MUXER
    av_register_rtp_dynamic_payload_handlers();
#endif
#endif
    REGISTER_DEMUXER  (AVS, avs);
    REGISTER_DEMUXER  (BETHSOFTVID, bethsoftvid);
    REGISTER_DEMUXER  (C93, c93);
    REGISTER_MUXER    (CRC, crc);
    REGISTER_DEMUXER  (DAUD, daud);
    REGISTER_DEMUXER  (DSICIN, dsicin);
    REGISTER_DEMUXER  (DTS, dts);
    REGISTER_MUXDEMUX (DV, dv);
    REGISTER_DEMUXER  (DXA, dxa);
    REGISTER_DEMUXER  (EA, ea);
    REGISTER_MUXDEMUX (FFM, ffm);
    REGISTER_MUXDEMUX (FLAC, flac);
    REGISTER_DEMUXER  (FLIC, flic);
    REGISTER_MUXDEMUX (FLV, flv);
    REGISTER_DEMUXER  (FOURXM, fourxm);
    REGISTER_MUXER    (FRAMECRC, framecrc);
    REGISTER_MUXDEMUX (GIF, gif);
    REGISTER_MUXDEMUX (GXF, gxf);
    REGISTER_MUXDEMUX (H261, h261);
    REGISTER_MUXDEMUX (H263, h263);
    REGISTER_MUXDEMUX (H264, h264);
    REGISTER_DEMUXER  (IDCIN, idcin);
    REGISTER_MUXDEMUX (IMAGE2, image2);
    REGISTER_MUXDEMUX (IMAGE2PIPE, image2pipe);
    REGISTER_DEMUXER  (INGENIENT, ingenient);
    REGISTER_DEMUXER  (IPMOVIE, ipmovie);
    REGISTER_MUXDEMUX (M4V, m4v);
    REGISTER_MUXDEMUX (MATROSKA, matroska);
    REGISTER_MUXER    (MATROSKA_AUDIO, matroska_audio);
    REGISTER_MUXDEMUX (MJPEG, mjpeg);
    REGISTER_DEMUXER  (MM, mm);
    REGISTER_MUXDEMUX (MMF, mmf);
    REGISTER_MUXDEMUX (MOV, mov);
    REGISTER_MUXER    (MP2, mp2);
    REGISTER_MUXDEMUX (MP3, mp3);
    REGISTER_MUXER    (MP4, mp4);
    REGISTER_DEMUXER  (MPC, mpc);
    REGISTER_MUXER    (MPEG1SYSTEM, mpeg1system);
    REGISTER_MUXER    (MPEG1VCD, mpeg1vcd);
    REGISTER_MUXER    (MPEG1VIDEO, mpeg1video);
    REGISTER_MUXER    (MPEG2DVD, mpeg2dvd);
    REGISTER_MUXER    (MPEG2SVCD, mpeg2svcd);
    REGISTER_MUXER    (MPEG2VIDEO, mpeg2video);
    REGISTER_MUXER    (MPEG2VOB, mpeg2vob);
    REGISTER_DEMUXER  (MPEGPS, mpegps);
    REGISTER_MUXDEMUX (MPEGTS, mpegts);
    REGISTER_DEMUXER  (MPEGTSRAW, mpegtsraw);
    REGISTER_DEMUXER  (MPEGVIDEO, mpegvideo);
    REGISTER_MUXER    (MPJPEG, mpjpeg);
    REGISTER_DEMUXER  (MTV, mtv);
    REGISTER_DEMUXER  (MXF, mxf);
    REGISTER_DEMUXER  (NSV, nsv);
    REGISTER_MUXER    (NULL, null);
    REGISTER_MUXDEMUX (NUT, nut);
    REGISTER_DEMUXER  (NUV, nuv);
    REGISTER_MUXDEMUX (OGG, ogg);
    REGISTER_MUXDEMUX (PCM_ALAW,  pcm_alaw);
    REGISTER_MUXDEMUX (PCM_MULAW, pcm_mulaw);
    REGISTER_MUXDEMUX (PCM_S16BE, pcm_s16be);
    REGISTER_MUXDEMUX (PCM_S16LE, pcm_s16le);
    REGISTER_MUXDEMUX (PCM_S8,    pcm_s8);
    REGISTER_MUXDEMUX (PCM_U16BE, pcm_u16be);
    REGISTER_MUXDEMUX (PCM_U16LE, pcm_u16le);
    REGISTER_MUXDEMUX (PCM_U8,    pcm_u8);
    REGISTER_MUXER    (PSP, psp);
    REGISTER_MUXDEMUX (RAWVIDEO, rawvideo);
    REGISTER_MUXDEMUX (RM, rm);
    REGISTER_MUXDEMUX (ROQ, roq);
    REGISTER_DEMUXER  (SEGAFILM, segafilm);
    REGISTER_DEMUXER  (SHORTEN, shorten);
    REGISTER_DEMUXER  (SMACKER, smacker);
    REGISTER_DEMUXER  (SOL, sol);
    REGISTER_DEMUXER  (STR, str);
    REGISTER_MUXDEMUX (SWF, swf);
    REGISTER_MUXER    (TG2, tg2);
    REGISTER_MUXER    (TGP, tgp);
    REGISTER_DEMUXER  (THP, thp);
    REGISTER_DEMUXER  (TIERTEXSEQ, tiertexseq);
    REGISTER_DEMUXER  (TTA, tta);
    REGISTER_DEMUXER  (TXD, txd);
    REGISTER_DEMUXER  (VC1, vc1);
    REGISTER_DEMUXER  (VMD, vmd);
    REGISTER_MUXDEMUX (VOC, voc);
    REGISTER_MUXDEMUX (WAV, wav);
    REGISTER_DEMUXER  (WC3, wc3);
    REGISTER_DEMUXER  (WSAUD, wsaud);
    REGISTER_DEMUXER  (WSVQA, wsvqa);
    REGISTER_DEMUXER  (WV, wv);
    REGISTER_MUXDEMUX (YUV4MPEGPIPE, yuv4mpegpipe);

    REGISTER_PROTOCOL (FILE, file);
    REGISTER_PROTOCOL (HTTP, http);
    REGISTER_PROTOCOL (PIPE, pipe);



- libavcodec/makefile:

create makefile_os4, change

OBJS         += aasc.o ac3dec.o ac3tab.o ac3.o mdct.o fft.o ac3enc.o ac3tab.o ac3.o alac.o sp5xdec.o mjpegdec.o mjpeg.o apedec.o asv1.o atrac3.o mdct.o fft.o avs.o bethsoftvideo.o bmp.o bmpenc.o c93.ocavs.o cavsdec.o cavsdsp.o golomb.o cinepak.o cljr.o cook.o mdct.o fft.o cscd.o cyuv.o dca.o dnxhddec.o dnxhddata.odsicinav.o dvbsubdec.o dvbsub.o dvdsubenc.o dv.o dxa.o 8bps.o ffv1.o rangecoder.o golomb.o huffyuv.o flac.o flacenc.o flashsv.o flashsvenc.o flicvideo.o h263dec.o h263.o mpegvideo_enc.o motion_est.o ratecontrol.o 4xm.o fraps.o gifdec.o lzw.o gif.o h261dec.o h261.o h261enc.o h261.o mpegvideo_enc.o motion_est.o ratecontrol.o h263dec.o h263.o h263dec.o h263.o mpegvideo_enc.o motion_est.o ratecontrol.o h264.o h264idct.o h264pred.o cabac.o golomb.o h264enc.o h264dspenc.o huffyuv.o idcinvideo.o imc.o mdct.o fft.o indeo2.o indeo3.o interplayvideo.oy dpcm.o jpeglsdec.o jpegls.o mjpegdec.o mjpeg.o golomb.o jpeglsenc.o jpegls.o golomb.o kmvc.o= ljpegenc.o mjpegenc.o mjpeg.o mpegvideo_enc.o motion_est.o ratecontrol.o loco.o golomb.o mace.o mjpegdec.o mjpeg.o mpegvideo_enc.o motion_est.o ratecontrol.o mjpegbdec.o mjpegdec.o mjpeg.o mmvideo.o mpegaudiodec.o mpegaudiodecheader.o mpegaudio.o mpegaudiodata.o mpc.o mpegaudiodec.o mpeg12enc.o mpeg12data.o mpegvideo_enc.o motion_est.o ratecontrol.o h263dec.o h263.o mpegvideo_enc.o motion_est.o ratecontrol.o msmpeg4.o msmpeg4data.o h263dec.o h263.o msrle.o msvideo1.o lcldec.o nuv.o rtjpeg.o pnmenc.o pnm.o pnmenc.o pnm.o


OBJS-$(CONFIG_PGM_ENCODER)             += pnmenc.o pnm.o
OBJS-$(CONFIG_PGMYUV_ENCODER)          += pnmenc.o pnm.o
OBJS-$(CONFIG_PNG_DECODER)             += png.o pngdec.o
OBJS-$(CONFIG_PNG_ENCODER)             += png.o pngenc.o
OBJS-$(CONFIG_PPM_ENCODER)             += pnmenc.o pnm.o
OBJS-$(CONFIG_PTX_DECODER)             += ptx.o
OBJS-$(CONFIG_QDM2_DECODER)            += qdm2.o mdct.o fft.o mpegaudiodec.o mpegaudiodecheader.o mpegaudio.o mpegaudiodata.o
OBJS-$(CONFIG_QDRAW_DECODER)           += qdrw.o
OBJS-$(CONFIG_QPEG_DECODER)            += qpeg.o
OBJS-$(CONFIG_QTRLE_DECODER)           += qtrle.o
OBJS-$(CONFIG_QTRLE_ENCODER)           += qtrleenc.o
OBJS-$(CONFIG_RA_144_DECODER)          += ra144.o
OBJS-$(CONFIG_RA_288_DECODER)          += ra288.o
OBJS-$(CONFIG_RAWVIDEO_DECODER)        += rawdec.o
OBJS-$(CONFIG_RAWVIDEO_ENCODER)        += rawenc.o
OBJS-$(CONFIG_ROQ_DECODER)             += roqvideodec.o roqvideo.o
OBJS-$(CONFIG_ROQ_ENCODER)             += roqvideoenc.o roqvideo.o elbg.o
OBJS-$(CONFIG_ROQ_DPCM_DECODER)        += dpcm.o
OBJS-$(CONFIG_ROQ_DPCM_ENCODER)        += roqaudioenc.o
OBJS-$(CONFIG_RPZA_DECODER)            += rpza.o
OBJS-$(CONFIG_RV10_DECODER)            += rv10.o h263.o
OBJS-$(CONFIG_RV10_ENCODER)            += rv10.o mpegvideo_enc.o motion_est.o ratecontrol.o h263.o
OBJS-$(CONFIG_RV20_DECODER)            += rv10.o h263.o
OBJS-$(CONFIG_RV20_ENCODER)            += rv10.o mpegvideo_enc.o motion_est.o ratecontrol.o h263.o
OBJS-$(CONFIG_SGI_DECODER)             += sgidec.o
OBJS-$(CONFIG_SGI_ENCODER)             += sgienc.o rle.o
OBJS-$(CONFIG_SHORTEN_DECODER)         += shorten.o golomb.o
OBJS-$(CONFIG_SMACKAUD_DECODER)        += smacker.o
OBJS-$(CONFIG_SMACKER_DECODER)         += smacker.o
OBJS-$(CONFIG_SMC_DECODER)             += smc.o
OBJS-$(CONFIG_SNOW_DECODER)            += snow.o rangecoder.o
OBJS-$(CONFIG_SNOW_ENCODER)            += snow.o rangecoder.o motion_est.o ratecontrol.o h263.o
OBJS-$(CONFIG_SOL_DPCM_DECODER)        += dpcm.o
OBJS-$(CONFIG_SONIC_DECODER)           += sonic.o golomb.o
OBJS-$(CONFIG_SONIC_ENCODER)           += sonic.o golomb.o
OBJS-$(CONFIG_SONIC_LS_ENCODER)        += sonic.o golomb.o
OBJS-$(CONFIG_SP5X_DECODER)            += sp5xdec.o mjpegdec.o mjpeg.o
OBJS-$(CONFIG_SVQ1_DECODER)            += svq1dec.o svq1.o h263.o
OBJS-$(CONFIG_SVQ1_ENCODER)            += svq1enc.o svq1.o motion_est.o h263.o
OBJS-$(CONFIG_SVQ3_DECODER)            += h264.o h264idct.o h264pred.o cabac.o golomb.o
OBJS-$(CONFIG_TARGA_DECODER)           += targa.o
OBJS-$(CONFIG_TARGA_ENCODER)           += targaenc.o rle.o
OBJS-$(CONFIG_THEORA_DECODER)          += vp3.o xiph.o vp3dsp.o
OBJS-$(CONFIG_THP_DECODER)             += mjpegdec.o mjpeg.o
OBJS-$(CONFIG_TIERTEXSEQVIDEO_DECODER) += tiertexseqv.o
OBJS-$(CONFIG_TIFF_DECODER)            += tiff.o lzw.o
OBJS-$(CONFIG_TIFF_ENCODER)            += tiffenc.o rle.o lzwenc.o
OBJS-$(CONFIG_TRUEMOTION1_DECODER)     += truemotion1.o
OBJS-$(CONFIG_TRUEMOTION2_DECODER)     += truemotion2.o
OBJS-$(CONFIG_TRUESPEECH_DECODER)      += truespeech.o
OBJS-$(CONFIG_TSCC_DECODER)            += tscc.o
OBJS-$(CONFIG_TTA_DECODER)             += tta.o
OBJS-$(CONFIG_TXD_DECODER)             += txd.o s3tc.o
OBJS-$(CONFIG_ULTI_DECODER)            += ulti.o
OBJS-$(CONFIG_VC1_DECODER)             += vc1.o vc1data.o vc1dsp.o msmpeg4data.o
OBJS-$(CONFIG_VCR1_DECODER)            += vcr1.o
OBJS-$(CONFIG_VCR1_ENCODER)            += vcr1.o
OBJS-$(CONFIG_VMDAUDIO_DECODER)        += vmdav.o
OBJS-$(CONFIG_VMDVIDEO_DECODER)        += vmdav.o
OBJS-$(CONFIG_VMNC_DECODER)            += vmnc.o
OBJS-$(CONFIG_VORBIS_DECODER)          += vorbis_dec.o vorbis.o vorbis_data.o xiph.o mdct.o fft.o
OBJS-$(CONFIG_VORBIS_ENCODER)          += vorbis_enc.o vorbis.o vorbis_data.o mdct.o fft.o
OBJS-$(CONFIG_VP3_DECODER)             += vp3.o vp3dsp.o
OBJS-$(CONFIG_VP5_DECODER)             += vp5.o vp56.o vp56data.o vp3dsp.o
OBJS-$(CONFIG_VP6_DECODER)             += vp6.o vp56.o vp56data.o vp3dsp.o
OBJS-$(CONFIG_VP6F_DECODER)            += vp6.o vp56.o vp56data.o vp3dsp.o
OBJS-$(CONFIG_VQA_DECODER)             += vqavideo.o
OBJS-$(CONFIG_WAVPACK_DECODER)         += wavpack.o
OBJS-$(CONFIG_WMAV1_DECODER)           += wmadec.o wma.o mdct.o fft.o
OBJS-$(CONFIG_WMAV2_DECODER)           += wmadec.o wma.o mdct.o fft.o
OBJS-$(CONFIG_WMAV1_ENCODER)           += wmaenc.o wma.o mdct.o fft.o
OBJS-$(CONFIG_WMAV2_ENCODER)           += wmaenc.o wma.o mdct.o fft.o
OBJS-$(CONFIG_WMV1_DECODER)            += h263dec.o h263.o
OBJS-$(CONFIG_WMV1_ENCODER)            += mpegvideo_enc.o motion_est.o ratecontrol.o h263.o
OBJS-$(CONFIG_WMV2_DECODER)            += msmpeg4.o msmpeg4data.o h263dec.o h263.o
OBJS-$(CONFIG_WMV2_ENCODER)            += msmpeg4.o msmpeg4data.o mpegvideo_enc.o motion_est.o ratecontrol.o h263.o
OBJS-$(CONFIG_WMV3_DECODER)            += vc1.o vc1data.o vc1dsp.o
OBJS-$(CONFIG_WNV1_DECODER)            += wnv1.o
OBJS-$(CONFIG_WS_SND1_DECODER)         += ws-snd1.o
OBJS-$(CONFIG_XAN_DPCM_DECODER)        += dpcm.o
OBJS-$(CONFIG_XAN_WC3_DECODER)         += xan.o
OBJS-$(CONFIG_XAN_WC4_DECODER)         += xan.o
OBJS-$(CONFIG_XL_DECODER)              += xl.o
OBJS-$(CONFIG_XSUB_DECODER)            += xsubdec.o
OBJS-$(CONFIG_ZLIB_DECODER)            += lcldec.o
OBJS-$(CONFIG_ZLIB_ENCODER)            += lclenc.o
OBJS-$(CONFIG_ZMBV_DECODER)            += zmbv.o
OBJS-$(CONFIG_ZMBV_ENCODER)            += zmbvenc.o

OBJS-$(CONFIG_PCM_S32LE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_S32LE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_S32BE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_S32BE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_U32LE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_U32LE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_U32BE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_U32BE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_S24LE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_S24LE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_S24BE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_S24BE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_U24LE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_U24LE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_U24BE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_U24BE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_S24DAUD_DECODER)     += pcm.o
OBJS-$(CONFIG_PCM_S24DAUD_ENCODER)     += pcm.o
OBJS-$(CONFIG_PCM_S16LE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_S16LE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_S16BE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_S16BE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_U16LE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_U16LE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_U16BE_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_U16BE_ENCODER)       += pcm.o
OBJS-$(CONFIG_PCM_S8_DECODER)          += pcm.o
OBJS-$(CONFIG_PCM_S8_ENCODER)          += pcm.o
OBJS-$(CONFIG_PCM_U8_DECODER)          += pcm.o
OBJS-$(CONFIG_PCM_U8_ENCODER)          += pcm.o
OBJS-$(CONFIG_PCM_ALAW_DECODER)        += pcm.o
OBJS-$(CONFIG_PCM_ALAW_ENCODER)        += pcm.o
OBJS-$(CONFIG_PCM_MULAW_DECODER)       += pcm.o
OBJS-$(CONFIG_PCM_MULAW_ENCODER)       += pcm.o

OBJS-$(CONFIG_ADPCM_4XM_DECODER)       += adpcm.o
OBJS-$(CONFIG_ADPCM_4XM_ENCODER)       += adpcm.o
OBJS-$(CONFIG_ADPCM_ADX_DECODER)       += adx.o
OBJS-$(CONFIG_ADPCM_ADX_ENCODER)       += adx.o
OBJS-$(CONFIG_ADPCM_CT_DECODER)        += adpcm.o
OBJS-$(CONFIG_ADPCM_CT_ENCODER)        += adpcm.o
OBJS-$(CONFIG_ADPCM_EA_DECODER)        += adpcm.o
OBJS-$(CONFIG_ADPCM_EA_ENCODER)        += adpcm.o
OBJS-$(CONFIG_ADPCM_G726_DECODER)      += g726.o
OBJS-$(CONFIG_ADPCM_G726_ENCODER)      += g726.o
OBJS-$(CONFIG_ADPCM_IMA_AMV_DECODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_DK3_DECODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_DK3_ENCODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_DK4_DECODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_DK4_ENCODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_QT_DECODER)    += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_QT_ENCODER)    += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_SMJPEG_DECODER) += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_SMJPEG_ENCODER) += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_WAV_DECODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_WAV_ENCODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_WS_DECODER)    += adpcm.o
OBJS-$(CONFIG_ADPCM_IMA_WS_ENCODER)    += adpcm.o
OBJS-$(CONFIG_ADPCM_MS_DECODER)        += adpcm.o
OBJS-$(CONFIG_ADPCM_MS_ENCODER)        += adpcm.o
OBJS-$(CONFIG_ADPCM_SBPRO_2_DECODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_SBPRO_2_ENCODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_SBPRO_3_DECODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_SBPRO_3_ENCODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_SBPRO_4_DECODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_SBPRO_4_ENCODER)   += adpcm.o
OBJS-$(CONFIG_ADPCM_SWF_DECODER)       += adpcm.o
OBJS-$(CONFIG_ADPCM_SWF_ENCODER)       += adpcm.o
OBJS-$(CONFIG_ADPCM_THP_DECODER)       += adpcm.o
OBJS-$(CONFIG_ADPCM_XA_DECODER)        += adpcm.o
OBJS-$(CONFIG_ADPCM_XA_ENCODER)        += adpcm.o
OBJS-$(CONFIG_ADPCM_YAMAHA_DECODER)    += adpcm.o
OBJS-$(CONFIG_ADPCM_YAMAHA_ENCODER)    += adpcm.o

# external codec libraries
OBJS-$(CONFIG_LIBA52)                  += liba52.o
OBJS-$(CONFIG_LIBAMR)                  += libamr.o
OBJS-$(CONFIG_LIBFAAC)                 += libfaac.o
OBJS-$(CONFIG_LIBFAAD)                 += libfaad.o
OBJS-$(CONFIG_LIBGSM)                  += libgsm.o
OBJS-$(CONFIG_LIBMP3LAME)              += libmp3lame.o
OBJS-$(CONFIG_LIBTHEORA)               += libtheoraenc.o
OBJS-$(CONFIG_LIBVORBIS)               += libvorbis.o
OBJS-$(CONFIG_LIBX264)                 += libx264.o
OBJS-$(CONFIG_LIBXVID)                 += libxvidff.o libxvid_rc.o


OBJS-$(CONFIG_AAC_PARSER)              += aac_parser.o aac_ac3_parser.o
OBJS-$(CONFIG_AC3_PARSER)              += ac3_parser.o ac3tab.o aac_ac3_parser.o
OBJS-$(CONFIG_CAVSVIDEO_PARSER)        += cavs_parser.o
OBJS-$(CONFIG_DCA_PARSER)              += dca_parser.o
OBJS-$(CONFIG_DVBSUB_PARSER)           += dvbsub_parser.o
OBJS-$(CONFIG_DVDSUB_PARSER)           += dvdsub_parser.o
OBJS-$(CONFIG_H261_PARSER)             += h261_parser.o
OBJS-$(CONFIG_H263_PARSER)             += h263_parser.o
OBJS-$(CONFIG_H264_PARSER)             += h264_parser.o
OBJS-$(CONFIG_MJPEG_PARSER)            += mjpeg_parser.o
OBJS-$(CONFIG_MPEG4VIDEO_PARSER)       += mpeg4video_parser.o h263.o
OBJS-$(CONFIG_MPEGAUDIO_PARSER)        += mpegaudio_parser.o mpegaudiodecheader.o mpegaudiodata.o
OBJS-$(CONFIG_MPEGVIDEO_PARSER)        += mpegvideo_parser.o
OBJS-$(CONFIG_PNM_PARSER)              += pnm_parser.o pnm.o
OBJS-$(CONFIG_VC1_PARSER)              += vc1_parser.o

OBJS-$(CONFIG_DUMP_EXTRADATA_BSF)      += dump_extradata_bsf.o
OBJS-$(CONFIG_H264_MP4TOANNEXB_BSF)    += h264_mp4toannexb_bsf.o
OBJS-$(CONFIG_IMX_DUMP_HEADER_BSF)     += imx_dump_header_bsf.o
OBJS-$(CONFIG_MJPEGA_DUMP_HEADER_BSF)  += mjpega_dump_header_bsf.o
OBJS-$(CONFIG_MP3_HEADER_COMPRESS_BSF) += mp3_header_compress_bsf.o
OBJS-$(CONFIG_MP3_HEADER_DECOMPRESS_BSF) += mp3_header_decompress_bsf.o mpegaudiodata.o
OBJS-$(CONFIG_NOISE_BSF)               += noise_bsf.o
OBJS-$(CONFIG_REMOVE_EXTRADATA_BSF)    += remove_extradata_bsf.o

OBJS-$(HAVE_BEOSTHREADS)               += beosthread.o
OBJS-$(HAVE_OS2THREADS)                += os2thread.o
OBJS-$(HAVE_PTHREADS)                  += pthread.o
OBJS-$(HAVE_W32THREADS)                += w32thread.o

OBJS-$(HAVE_XVMC_ACCEL)                += xvmcvideo.o

ifneq ($(CONFIG_SWSCALER),yes)
OBJS += imgresample.o
endif


to

OBJS         += 4xm.o 8bps.o aac_ac3_parser.o aac_parser.o aasc.o ac3.o ac3_parser.o ac3dec.o ac3enc.o ac3tab.o adpcm.o adx.o alac.o apedec.o apiexample.o asv1.o atrac3.o avs.o bethsoftvideo.o bmp.o bmpenc.o c93.o cabac.o cavs.o cavs_parser.o cavsdec.o cavsdsp.o cinepak.o cljr.o cook.o cscd.o cyuv.o dca.o dca_parser.o dct-test.o dnxhddata.o dnxhddec.o dpcm.o dsicinav.o dump_extradata_bsf.o dv.o dvbsub.o dvbsub_parser.o dvbsubdec.o dvdsub_parser.o dvdsubdec.o dvdsubenc.o dxa.o elbg.o fdctref.o fft.o fft-test.o ffv1.o flac.o flacenc.o flashsv.o flashsvenc.o flicvideo.o fraps.o g726.o gif.o gifdec.o golomb.o h261.o h261_parser.o h261dec.o h261enc.o h263.o h263_parser.o h263dec.o h264.o h264_mp4toannexb_bsf.o h264_parser.o h264dspenc.o h264enc.o h264idct.o h264pred.o huffyuv.o idcinvideo.o imc.o imgresample.o imx_dump_header_bsf.o indeo2.o indeo3.o interplayvideo.o jpegls.o jpeglsdec.o jpeglsenc.o kmvc.o lcldec.o lclenc.o liba52.o libfaad.o libvorbis.o libxvid_rc.o ljpegenc.o loco.o lzw.o lzwenc.o mace.o mdct.o mdec.o mjpeg.o mjpeg_parser.o mjpega_dump_header_bsf.o mjpegbdec.o mjpegdec.o mjpegenc.o mmvideo.o mp3_header_compress_bsf.o mp3_header_decompress_bsf.o motion_est.o mpc.o mpeg12enc.o mpeg4video_parser.o mpegaudio.o mpegaudio_parser.o mpegaudiodata.o mpegaudiodec.o mpegaudiodecheader.o mpegaudioenc.o mpegvideo_enc.o mpegvideo_parser.o msmpeg4.o msmpeg4data.o msrle.o msvideo1.o noise_bsf.o nuv.o pcm.o png.o pngdec.o pngenc.o pnm.o pnm_parser.o pnmenc.o pthread.o ptx.o qdm2.o qdrw.o qpeg.o qtrle.o qtrleenc.o ra144.o ra288.o rangecoder.o ratecontrol.o rawdec.o rawenc.o remove_extradata_bsf.o rle.o roqaudioenc.o roqvideo.o roqvideodec.o roqvideoenc.o rpza.o rtjpeg.o rv10.o s3tc.o sgidec.o sgienc.o shorten.o smacker.o smc.o snow.o sonic.o sp5xdec.o svq1.o svq1dec.o svq1enc.o targa.o targaenc.o tiertexseqv.o tiff.o tiffenc.o truemotion1.o truemotion2.o truespeech.o tscc.o tta.o txd.o ulti.o vc1.o vc1_parser.o vc1data.o vc1dsp.o vcr1.o vmdav.o vmnc.o vorbis.o vorbis_data.o vorbis_dec.o vorbis_enc.o vp3.o vp3dsp.o vp5.o vp56.o vp56data.o vp6.o vqavideo.o wavpack.o wma.o wmadec.o wmaenc.o wnv1.o ws-snd1.o xan.o xiph.o xl.o xsubdec.o zmbv.o zmbvenc.o


in main makefile_os4:

libavcodec/libavcodec.a:
	$(MAKE) -C libavcodec -f Makefile_os4


- libavcodec/liba52.c:

change

#include <liba52/a52.h>

to

#include <a52dec/a52.h>


- libavcodec/faad.c:

#include "libfaad2/faad.h"


- libavcodec/mdec.c:

add:

#ifdef __amigaos4__
#include "mpeg12data.h"
#define TEX_VLC_BITS 9
#endif


- libavcoded/utils.c:

change

#ifdef CONFIG_REDIR_DEMUXER
    if (!strcmp(fmt->name, "redir")) {
        int redir_open(AVFormatContext **ic_ptr, ByteIOContext *f);
        err = redir_open(ic_ptr, pb);
        url_fclose(pb);
        return err;
    }
#endif

to

#if defined (CONFIG_REDIR_DEMUXER) && !defined (__amigaos4__)
    if (!strcmp(fmt->name, "redir")) {
        int redir_open(AVFormatContext **ic_ptr, ByteIOContext *f);
        err = redir_open(ic_ptr, pb);
        url_fclose(pb);
        return err;
    }
#endif


